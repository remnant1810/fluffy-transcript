{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carls\\\\Documents\\\\Development\\\\Transcript\\\\frontend\\\\src\\\\components\\\\ChatUI.js\",\n  _s = $RefreshSig$();\n// ChatUI.js\nimport React, { useState, useRef } from 'react';\nimport { MessageSquare } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatUI() {\n  _s();\n  const [userInput, setUserInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  const formatTimestamp = timestamp => {\n    return new Date(timestamp).toLocaleTimeString();\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!userInput.trim()) return;\n    const newMessage = {\n      text: userInput,\n      timestamp: new Date().toISOString(),\n      isUser: true\n    };\n    setMessages([...messages, newMessage]);\n    setUserInput('');\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:8000/ask', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          question: userInput\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to get response');\n      }\n      const data = await response.json();\n      const botResponse = {\n        text: data.answer,\n        timestamp: new Date().toISOString(),\n        isUser: false\n      };\n      setMessages(prev => [...prev, botResponse]);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n    scrollToBottom();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(MessageSquare, {\n        className: \"chat-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Transcript Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.isUser ? 'user' : 'bot'}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-text\",\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-timestamp\",\n            children: formatTimestamp(message.timestamp)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userInput,\n        onChange: e => setUserInput(e.target.value),\n        placeholder: \"Ask a question about your transcripts...\",\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? 'Thinking...' : 'Send'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatUI, \"Dbr3PwNcqwUATCBD/3FGY+SefgU=\");\n_c = ChatUI;\nexport default ChatUI;\nvar _c;\n$RefreshReg$(_c, \"ChatUI\");","map":{"version":3,"names":["React","useState","useRef","MessageSquare","jsxDEV","_jsxDEV","ChatUI","_s","userInput","setUserInput","messages","setMessages","loading","setLoading","error","setError","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","formatTimestamp","timestamp","Date","toLocaleTimeString","handleSubmit","e","preventDefault","trim","newMessage","text","toISOString","isUser","response","fetch","method","headers","body","JSON","stringify","question","ok","Error","data","json","botResponse","answer","prev","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","ref","onSubmit","type","value","onChange","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/carls/Documents/Development/Transcript/frontend/src/components/ChatUI.js"],"sourcesContent":["// ChatUI.js\nimport React, { useState, useRef } from 'react';\nimport { MessageSquare } from 'lucide-react';\n\nfunction ChatUI() {\n  const [userInput, setUserInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  const formatTimestamp = (timestamp) => {\n    return new Date(timestamp).toLocaleTimeString();\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!userInput.trim()) return;\n\n    const newMessage = {\n      text: userInput,\n      timestamp: new Date().toISOString(),\n      isUser: true\n    };\n\n    setMessages([...messages, newMessage]);\n    setUserInput('');\n    setLoading(true);\n\n    try {\n      const response = await fetch('http://localhost:8000/ask', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ question: userInput }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to get response');\n      }\n\n      const data = await response.json();\n      const botResponse = {\n        text: data.answer,\n        timestamp: new Date().toISOString(),\n        isUser: false\n      };\n\n      setMessages(prev => [...prev, botResponse]);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n\n    scrollToBottom();\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chat-header\">\n        <MessageSquare className=\"chat-icon\" />\n        <h2>Transcript Assistant</h2>\n      </div>\n      <div className=\"messages-container\">\n        {messages.map((message, index) => (\n          <div\n            key={index}\n            className={`message ${message.isUser ? 'user' : 'bot'}`}\n          >\n            <div className=\"message-content\">\n              <div className=\"message-text\">{message.text}</div>\n              <div className=\"message-timestamp\">\n                {formatTimestamp(message.timestamp)}\n              </div>\n            </div>\n          </div>\n        ))}\n        <div ref={messagesEndRef} />\n      </div>\n      {error && <div className=\"error-message\">{error}</div>}\n      <form onSubmit={handleSubmit} className=\"chat-input\">\n        <input\n          type=\"text\"\n          value={userInput}\n          onChange={(e) => setUserInput(e.target.value)}\n          placeholder=\"Ask a question about your transcripts...\"\n          disabled={loading}\n        />\n        <button type=\"submit\" disabled={loading}>\n          {loading ? 'Thinking...' : 'Send'}\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default ChatUI;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}