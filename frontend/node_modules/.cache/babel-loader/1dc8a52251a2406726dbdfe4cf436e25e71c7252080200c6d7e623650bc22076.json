{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carls\\\\Documents\\\\Development\\\\Transcript\\\\frontend\\\\src\\\\components\\\\TranscriptsList.js\",\n  _s = $RefreshSig$();\n// TranscriptsList.js\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MessageSquare } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TranscriptsList({\n  onSelectTranscript\n}) {\n  _s();\n  const [transcripts, setTranscripts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    fetchTranscripts();\n  }, []);\n  const fetchTranscripts = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/transcripts');\n      if (!response.ok) {\n        throw new Error('Failed to fetch transcripts');\n      }\n      const data = await response.json();\n      setTranscripts(data);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSelect = transcriptId => {\n    onSelectTranscript(transcriptId);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading transcripts...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transcripts-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Transcripts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), transcripts.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No transcripts available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transcripts-grid\",\n      children: transcripts.map(transcript => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transcript-card\",\n        onClick: () => handleSelect(transcript.id),\n        children: [/*#__PURE__*/_jsxDEV(MessageSquare, {\n          className: \"transcript-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: transcript.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transcript-meta\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Date: \", transcript.date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this)]\n      }, transcript.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(TranscriptsList, \"Z8i82XsK5KTMy2OE7fFlWuqhR6Q=\");\n_c = TranscriptsList;\nexport default TranscriptsList;\nvar _c;\n$RefreshReg$(_c, \"TranscriptsList\");","map":{"version":3,"names":["React","useState","useEffect","Link","MessageSquare","jsxDEV","_jsxDEV","TranscriptsList","onSelectTranscript","_s","transcripts","setTranscripts","loading","setLoading","error","setError","fetchTranscripts","response","fetch","ok","Error","data","json","err","message","handleSelect","transcriptId","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","transcript","onClick","id","name","date","_c","$RefreshReg$"],"sources":["C:/Users/carls/Documents/Development/Transcript/frontend/src/components/TranscriptsList.js"],"sourcesContent":["// TranscriptsList.js\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MessageSquare } from 'lucide-react';\n\nfunction TranscriptsList({ onSelectTranscript }) {\n  const [transcripts, setTranscripts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    fetchTranscripts();\n  }, []);\n\n  const fetchTranscripts = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/transcripts');\n      if (!response.ok) {\n        throw new Error('Failed to fetch transcripts');\n      }\n      const data = await response.json();\n      setTranscripts(data);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSelect = (transcriptId) => {\n    onSelectTranscript(transcriptId);\n  };\n\n  if (loading) {\n    return <div>Loading transcripts...</div>;\n  }\n\n  if (error) {\n    return <div className=\"error-message\">{error}</div>;\n  }\n\n  return (\n    <div className=\"transcripts-list\">\n      <h2>Transcripts</h2>\n      {transcripts.length === 0 ? (\n        <div>No transcripts available</div>\n      ) : (\n        <div className=\"transcripts-grid\">\n          {transcripts.map((transcript) => (\n            <div\n              key={transcript.id}\n              className=\"transcript-card\"\n              onClick={() => handleSelect(transcript.id)}\n            >\n              <MessageSquare className=\"transcript-icon\" />\n              <h3>{transcript.name}</h3>\n              <div className=\"transcript-meta\">\n                <span>Date: {transcript.date}</span>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default TranscriptsList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}